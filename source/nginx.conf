worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent';
    error_log    /dev/stderr;
    access_log   /dev/stdout main;

    sendfile        on;
    keepalive_timeout  65;
    gzip  on;

    server {
        listen       8080;
        server_name  localhost;

        location / {
            default_type text/html;
            content_by_lua '
                local redis = require "resty.redis"
                local red = redis:new()

                red:set_timeout(1000) -- 1 second

                local ok, err = red:connect("127.0.0.1", 6379)
                if not ok then
                    ngx.log(ngx.ERR, "failed to connect to redis: ", err)
                    return ngx.exit(500)
                end

                local key = "site:"..ngx.var.uri

                local page, err = red:get(key)
                if page == ngx.null then
                    ngx.say("<p>Setting up key. Please reload...</p>")
                    red:set(key, "<p>Hello from redis: "..key.."</p>")
                    return
                end
                ngx.say(page)
            ';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}

daemon off;
